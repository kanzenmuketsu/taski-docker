name: Main Taski workflow

on:
  push:
    branches:
      - main
  
jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    # Копируем код проекта
    - name: Check out code
      uses: actions/checkout@v4
    # Устанавливаем Python с помощью action
    - name: Set up Python
      uses: actions/setup-python@v5
    # В action setup-python передаём параметр — версию Python
      with:
        python-version: "3.10"
    # Обновляем pip, устанавливаем ruff
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install ruff==0.8.0
        pip install -r ./backend/requirements.txt
    # Запускаем ruff
    - name: Lint with ruff and tests
      # Вызываем ruff и указываем ему,
      # что нужно проверить файлы только в папке backend/
      env:
        POSTGRES_USER: django_user
        POSTGRES_PASSWORD: django_password
        POSTGRES_DB: django_db
        # Сервер БД запущен в Docker, но его порт проброшен на хост
        # Поэтому подключаемся к 127.0.0.1:5432
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
      run: |
        python -m ruff check backend/
        cd backend/
        python manage.py test
  build-and-push-to-dockerhub:
    name: Push docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to DockerHub
      uses: docker/build-push-action@v3
      with:
        context: ./backend/
        push: true
        tags: kanzenmuketsu:taski_backend:latest 